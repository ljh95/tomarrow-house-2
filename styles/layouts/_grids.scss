/*
  Mobile ( < 768px) --------------------

  컬럼의 개수
  유닛의 사이즈
  거터의 사이즈

  # of columns                 4
  gutter                       20px
  margin                       5px
  container-size               100% - (5px * 2)
*/

/* 
  Tablet ( >= 768px) --------------------

  컬럼의 개수
  유닛의 사이즈
  거터의 사이즈

  # of columns                 12
  gutter                       20px
  margin                       30px
  container-size               100% - (30px * 2)
  max-container-size           960px
*/

/* 
  Desktop ( >= 1200px) --------------------

  컬럼의 개수
  유닛의 사이즈
  거터의 사이즈

  # of columns                 12
  gutter                       20px
  unit                         75px
  margin                       auto
  container-size               1140px
  max-container-size           1140px
*/

$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-breakpoint: 768px;
$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-breakpoint: 1200px;
$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns;

// @debug ($lg-unit + $gutter) * $lg-columns;

.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto;

  .row {
    display: flex;
    flex-wrap: wrap;
  }

  // 모든 컬럼과 관련된 클래스를 잡아내고 싶다.
  // .col-sm-1, .col-md-2, .col-lg-3
  // ^=  ->  이런 prefix를 가진 모든 class 를 집어준다.
  [class^='col-'] {
    padding: 0 $gutter / 2;
  }

  @for $i from 1 through $sm-columns {
    // @debug $i;
    .col-sm-#{$i} {
      // width: $i / $sm-columns * 100%;
      width: percentage($i / $sm-columns);
    }
  }

  @media screen and (min-width: $md-breakpoint) {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage($i / $md-columns);
      }
    }
  }

  @media screen and (min-width: $lg-breakpoint) {
    max-width: $lg-max-container;
    padding: 0;

    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
